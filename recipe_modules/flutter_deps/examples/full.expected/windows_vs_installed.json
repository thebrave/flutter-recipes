[
  {
    "cmd": [],
    "name": "OpenJDK dependency"
  },
  {
    "cmd": [
      "cipd.bat",
      "ensure",
      "-root",
      "[CACHE]\\java",
      "-ensure-file",
      "flutter/java/openjdk/${platform} v1",
      "-max-threads",
      "0",
      "-json-output",
      "/path/to/tmp/json"
    ],
    "name": "OpenJDK dependency.ensure_installed",
    "~followup_annotations": [
      "@@@STEP_NEST_LEVEL@1@@@",
      "@@@STEP_LOG_LINE@json.output@{@@@",
      "@@@STEP_LOG_LINE@json.output@  \"result\": {@@@",
      "@@@STEP_LOG_LINE@json.output@    \"\": [@@@",
      "@@@STEP_LOG_LINE@json.output@      {@@@",
      "@@@STEP_LOG_LINE@json.output@        \"instance_id\": \"resolved-instance_id-of-v1--------------\",@@@",
      "@@@STEP_LOG_LINE@json.output@        \"package\": \"flutter/java/openjdk/resolved-platform\"@@@",
      "@@@STEP_LOG_LINE@json.output@      }@@@",
      "@@@STEP_LOG_LINE@json.output@    ]@@@",
      "@@@STEP_LOG_LINE@json.output@  }@@@",
      "@@@STEP_LOG_LINE@json.output@}@@@",
      "@@@STEP_LOG_END@json.output@@@"
    ]
  },
  {
    "cmd": [],
    "name": "Arm Tools dependency"
  },
  {
    "cmd": [
      "cipd.bat",
      "ensure",
      "-root",
      "[CACHE]",
      "-ensure-file",
      "flutter_internal/tools/arm-tools v1",
      "-max-threads",
      "0",
      "-json-output",
      "/path/to/tmp/json"
    ],
    "name": "Arm Tools dependency.ensure_installed",
    "~followup_annotations": [
      "@@@STEP_NEST_LEVEL@1@@@",
      "@@@STEP_LOG_LINE@json.output@{@@@",
      "@@@STEP_LOG_LINE@json.output@  \"result\": {@@@",
      "@@@STEP_LOG_LINE@json.output@    \"\": [@@@",
      "@@@STEP_LOG_LINE@json.output@      {@@@",
      "@@@STEP_LOG_LINE@json.output@        \"instance_id\": \"resolved-instance_id-of-v1--------------\",@@@",
      "@@@STEP_LOG_LINE@json.output@        \"package\": \"flutter_internal/tools/arm-tools\"@@@",
      "@@@STEP_LOG_LINE@json.output@      }@@@",
      "@@@STEP_LOG_LINE@json.output@    ]@@@",
      "@@@STEP_LOG_LINE@json.output@  }@@@",
      "@@@STEP_LOG_LINE@json.output@}@@@",
      "@@@STEP_LOG_END@json.output@@@"
    ]
  },
  {
    "cmd": [
      "vpython3",
      "-u",
      "RECIPE_MODULE[recipe_engine::file]\\resources\\fileutil.py",
      "--json-output",
      "/path/to/tmp/json",
      "listdir",
      "[CACHE]\\arm-tools"
    ],
    "infra_step": true,
    "name": "Arm Tools dependency.arm-tools contents",
    "~followup_annotations": [
      "@@@STEP_NEST_LEVEL@1@@@",
      "@@@STEP_LOG_END@listdir@@@"
    ]
  },
  {
    "cmd": [
      "vpython3",
      "-u",
      "RECIPE_MODULE[recipe_engine::file]\\resources\\fileutil.py",
      "--json-output",
      "/path/to/tmp/json",
      "listdir",
      "[CACHE]\\arm-tools\\mali_offline_compiler"
    ],
    "infra_step": true,
    "name": "Arm Tools dependency.arm-tools malioc contents",
    "~followup_annotations": [
      "@@@STEP_NEST_LEVEL@1@@@",
      "@@@STEP_LOG_END@listdir@@@"
    ]
  },
  {
    "cmd": [],
    "name": "Download goldctl"
  },
  {
    "cmd": [
      "cipd.bat",
      "ensure",
      "-root",
      "[CACHE]\\gold",
      "-ensure-file",
      "skia/tools/goldctl/${platform} v2",
      "-max-threads",
      "0",
      "-json-output",
      "/path/to/tmp/json"
    ],
    "name": "Download goldctl.ensure_installed",
    "~followup_annotations": [
      "@@@STEP_NEST_LEVEL@1@@@",
      "@@@STEP_LOG_LINE@json.output@{@@@",
      "@@@STEP_LOG_LINE@json.output@  \"result\": {@@@",
      "@@@STEP_LOG_LINE@json.output@    \"\": [@@@",
      "@@@STEP_LOG_LINE@json.output@      {@@@",
      "@@@STEP_LOG_LINE@json.output@        \"instance_id\": \"resolved-instance_id-of-v2--------------\",@@@",
      "@@@STEP_LOG_LINE@json.output@        \"package\": \"skia/tools/goldctl/resolved-platform\"@@@",
      "@@@STEP_LOG_LINE@json.output@      }@@@",
      "@@@STEP_LOG_LINE@json.output@    ]@@@",
      "@@@STEP_LOG_LINE@json.output@  }@@@",
      "@@@STEP_LOG_LINE@json.output@}@@@",
      "@@@STEP_LOG_END@json.output@@@"
    ]
  },
  {
    "cmd": [],
    "name": "Chrome and driver dependency"
  },
  {
    "cmd": [
      "cipd.bat",
      "ensure",
      "-root",
      "[CACHE]\\chrome\\chrome",
      "-ensure-file",
      "flutter_internal/browsers/chrome/${platform} v3",
      "-max-threads",
      "0",
      "-json-output",
      "/path/to/tmp/json"
    ],
    "name": "Chrome and driver dependency.ensure_installed",
    "~followup_annotations": [
      "@@@STEP_NEST_LEVEL@1@@@",
      "@@@STEP_LOG_LINE@json.output@{@@@",
      "@@@STEP_LOG_LINE@json.output@  \"result\": {@@@",
      "@@@STEP_LOG_LINE@json.output@    \"\": [@@@",
      "@@@STEP_LOG_LINE@json.output@      {@@@",
      "@@@STEP_LOG_LINE@json.output@        \"instance_id\": \"resolved-instance_id-of-v3--------------\",@@@",
      "@@@STEP_LOG_LINE@json.output@        \"package\": \"flutter_internal/browsers/chrome/resolved-platform\"@@@",
      "@@@STEP_LOG_LINE@json.output@      }@@@",
      "@@@STEP_LOG_LINE@json.output@    ]@@@",
      "@@@STEP_LOG_LINE@json.output@  }@@@",
      "@@@STEP_LOG_LINE@json.output@}@@@",
      "@@@STEP_LOG_END@json.output@@@"
    ]
  },
  {
    "cmd": [
      "cipd.bat",
      "ensure",
      "-root",
      "[CACHE]\\chrome\\drivers",
      "-ensure-file",
      "flutter_internal/browser-drivers/chrome/${platform} v3",
      "-max-threads",
      "0",
      "-json-output",
      "/path/to/tmp/json"
    ],
    "name": "Chrome and driver dependency.ensure_installed (2)",
    "~followup_annotations": [
      "@@@STEP_NEST_LEVEL@1@@@",
      "@@@STEP_LOG_LINE@json.output@{@@@",
      "@@@STEP_LOG_LINE@json.output@  \"result\": {@@@",
      "@@@STEP_LOG_LINE@json.output@    \"\": [@@@",
      "@@@STEP_LOG_LINE@json.output@      {@@@",
      "@@@STEP_LOG_LINE@json.output@        \"instance_id\": \"resolved-instance_id-of-v3--------------\",@@@",
      "@@@STEP_LOG_LINE@json.output@        \"package\": \"flutter_internal/browser-drivers/chrome/resolved-platform\"@@@",
      "@@@STEP_LOG_LINE@json.output@      }@@@",
      "@@@STEP_LOG_LINE@json.output@    ]@@@",
      "@@@STEP_LOG_LINE@json.output@  }@@@",
      "@@@STEP_LOG_LINE@json.output@}@@@",
      "@@@STEP_LOG_END@json.output@@@"
    ]
  },
  {
    "cmd": [],
    "name": "Firefox dependency"
  },
  {
    "cmd": [
      "cipd.bat",
      "ensure",
      "-root",
      "[CACHE]\\firefox",
      "-ensure-file",
      "flutter_internal/browsers/firefox/${platform} v3",
      "-max-threads",
      "0",
      "-json-output",
      "/path/to/tmp/json"
    ],
    "name": "Firefox dependency.ensure_installed",
    "~followup_annotations": [
      "@@@STEP_NEST_LEVEL@1@@@",
      "@@@STEP_LOG_LINE@json.output@{@@@",
      "@@@STEP_LOG_LINE@json.output@  \"result\": {@@@",
      "@@@STEP_LOG_LINE@json.output@    \"\": [@@@",
      "@@@STEP_LOG_LINE@json.output@      {@@@",
      "@@@STEP_LOG_LINE@json.output@        \"instance_id\": \"resolved-instance_id-of-v3--------------\",@@@",
      "@@@STEP_LOG_LINE@json.output@        \"package\": \"flutter_internal/browsers/firefox/resolved-platform\"@@@",
      "@@@STEP_LOG_LINE@json.output@      }@@@",
      "@@@STEP_LOG_LINE@json.output@    ]@@@",
      "@@@STEP_LOG_LINE@json.output@  }@@@",
      "@@@STEP_LOG_LINE@json.output@}@@@",
      "@@@STEP_LOG_END@json.output@@@"
    ]
  },
  {
    "cmd": [
      "cipd.bat",
      "ensure",
      "-root",
      "[CACHE]\\go",
      "-ensure-file",
      "infra/3pp/tools/go/${platform} v4",
      "-max-threads",
      "0",
      "-json-output",
      "/path/to/tmp/json"
    ],
    "name": "ensure_installed",
    "~followup_annotations": [
      "@@@STEP_LOG_LINE@json.output@{@@@",
      "@@@STEP_LOG_LINE@json.output@  \"result\": {@@@",
      "@@@STEP_LOG_LINE@json.output@    \"\": [@@@",
      "@@@STEP_LOG_LINE@json.output@      {@@@",
      "@@@STEP_LOG_LINE@json.output@        \"instance_id\": \"resolved-instance_id-of-v4--------------\",@@@",
      "@@@STEP_LOG_LINE@json.output@        \"package\": \"infra/3pp/tools/go/resolved-platform\"@@@",
      "@@@STEP_LOG_LINE@json.output@      }@@@",
      "@@@STEP_LOG_LINE@json.output@    ]@@@",
      "@@@STEP_LOG_LINE@json.output@  }@@@",
      "@@@STEP_LOG_LINE@json.output@}@@@",
      "@@@STEP_LOG_END@json.output@@@"
    ]
  },
  {
    "cmd": [
      "vpython3",
      "-u",
      "RECIPE_MODULE[recipe_engine::file]\\resources\\fileutil.py",
      "--json-output",
      "/path/to/tmp/json",
      "ensure-directory",
      "--mode",
      "0o777",
      "[CLEANUP]\\go_path"
    ],
    "infra_step": true,
    "name": "Ensure go path"
  },
  {
    "cmd": [
      "cipd.bat",
      "ensure",
      "-root",
      "[CACHE]\\go",
      "-ensure-file",
      "infra/3pp/tools/go/${platform} version:2@1.19.3",
      "-max-threads",
      "0",
      "-json-output",
      "/path/to/tmp/json"
    ],
    "name": "ensure_installed (2)",
    "~followup_annotations": [
      "@@@STEP_LOG_LINE@json.output@{@@@",
      "@@@STEP_LOG_LINE@json.output@  \"result\": {@@@",
      "@@@STEP_LOG_LINE@json.output@    \"\": [@@@",
      "@@@STEP_LOG_LINE@json.output@      {@@@",
      "@@@STEP_LOG_LINE@json.output@        \"instance_id\": \"resolved-instance_id-of-version:2@1.19.3\",@@@",
      "@@@STEP_LOG_LINE@json.output@        \"package\": \"infra/3pp/tools/go/resolved-platform\"@@@",
      "@@@STEP_LOG_LINE@json.output@      }@@@",
      "@@@STEP_LOG_LINE@json.output@    ]@@@",
      "@@@STEP_LOG_LINE@json.output@  }@@@",
      "@@@STEP_LOG_LINE@json.output@}@@@",
      "@@@STEP_LOG_END@json.output@@@"
    ]
  },
  {
    "cmd": [
      "vpython3",
      "-u",
      "RECIPE_MODULE[recipe_engine::file]\\resources\\fileutil.py",
      "--json-output",
      "/path/to/tmp/json",
      "ensure-directory",
      "--mode",
      "0o777",
      "[CLEANUP]\\go_path"
    ],
    "infra_step": true,
    "name": "Ensure go path (2)"
  },
  {
    "cmd": [
      "go",
      "install",
      "github.com/technosophos/dashing@v5"
    ],
    "env": {
      "CHROME_EXECUTABLE": "[CACHE]\\chrome\\chrome\\chrome.exe",
      "CHROME_NO_SANDBOX": "true",
      "FIREFOX_EXECUTABLE": "[CACHE]\\firefox\\firefox",
      "GOPATH": "[CLEANUP]\\go_path"
    },
    "env_prefixes": {
      "PATH": [
        "[CACHE]\\chrome\\chrome",
        "[CACHE]\\chrome\\drivers",
        "[CACHE]\\firefox",
        "[CACHE]\\go\\bin",
        "[CLEANUP]\\go_path\\bin",
        "[CACHE]\\go\\bin",
        "[CLEANUP]\\go_path\\bin"
      ]
    },
    "infra_step": true,
    "name": "Install dashing"
  },
  {
    "cmd": [
      "cipd.bat",
      "ensure",
      "-root",
      "[CACHE]\\android",
      "-ensure-file",
      "flutter/android/sdk/all/${platform} latest",
      "-max-threads",
      "0",
      "-json-output",
      "/path/to/tmp/json"
    ],
    "name": "ensure_installed (3)",
    "~followup_annotations": [
      "@@@STEP_LOG_LINE@json.output@{@@@",
      "@@@STEP_LOG_LINE@json.output@  \"result\": {@@@",
      "@@@STEP_LOG_LINE@json.output@    \"\": [@@@",
      "@@@STEP_LOG_LINE@json.output@      {@@@",
      "@@@STEP_LOG_LINE@json.output@        \"instance_id\": \"resolved-instance_id-of-latest----------\",@@@",
      "@@@STEP_LOG_LINE@json.output@        \"package\": \"flutter/android/sdk/all/resolved-platform\"@@@",
      "@@@STEP_LOG_LINE@json.output@      }@@@",
      "@@@STEP_LOG_LINE@json.output@    ]@@@",
      "@@@STEP_LOG_LINE@json.output@  }@@@",
      "@@@STEP_LOG_LINE@json.output@}@@@",
      "@@@STEP_LOG_END@json.output@@@"
    ]
  },
  {
    "cmd": [
      "vpython3",
      "-u",
      "RECIPE_MODULE[recipe_engine::file]\\resources\\fileutil.py",
      "--json-output",
      "/path/to/tmp/json",
      "listdir",
      "[CACHE]\\gradle",
      "--recursive"
    ],
    "infra_step": true,
    "name": "gradle cache",
    "~followup_annotations": [
      "@@@STEP_LOG_END@listdir@@@"
    ]
  },
  {
    "cmd": [
      "cipd.bat",
      "ensure",
      "-root",
      "[CACHE]\\android",
      "-ensure-file",
      "flutter/android/sdk/all/${platform} version:29.0",
      "-max-threads",
      "0",
      "-json-output",
      "/path/to/tmp/json"
    ],
    "name": "ensure_installed (4)",
    "~followup_annotations": [
      "@@@STEP_LOG_LINE@json.output@{@@@",
      "@@@STEP_LOG_LINE@json.output@  \"result\": {@@@",
      "@@@STEP_LOG_LINE@json.output@    \"\": [@@@",
      "@@@STEP_LOG_LINE@json.output@      {@@@",
      "@@@STEP_LOG_LINE@json.output@        \"instance_id\": \"resolved-instance_id-of-version:29.0----\",@@@",
      "@@@STEP_LOG_LINE@json.output@        \"package\": \"flutter/android/sdk/all/resolved-platform\"@@@",
      "@@@STEP_LOG_LINE@json.output@      }@@@",
      "@@@STEP_LOG_LINE@json.output@    ]@@@",
      "@@@STEP_LOG_LINE@json.output@  }@@@",
      "@@@STEP_LOG_LINE@json.output@}@@@",
      "@@@STEP_LOG_END@json.output@@@"
    ]
  },
  {
    "cmd": [
      "vpython3",
      "-u",
      "RECIPE_MODULE[recipe_engine::file]\\resources\\fileutil.py",
      "--json-output",
      "/path/to/tmp/json",
      "listdir",
      "[CACHE]\\gradle",
      "--recursive"
    ],
    "infra_step": true,
    "name": "gradle cache (2)",
    "~followup_annotations": [
      "@@@STEP_LOG_END@listdir@@@"
    ]
  },
  {
    "cmd": [
      "vpython3",
      "-u",
      "RECIPE_MODULE[recipe_engine::file]\\resources\\fileutil.py",
      "--json-output",
      "/path/to/tmp/json",
      "listdir",
      "[CACHE]\\gradle",
      "--recursive"
    ],
    "infra_step": true,
    "name": "gradle cache (3)",
    "~followup_annotations": [
      "@@@STEP_LOG_END@listdir@@@"
    ]
  },
  {
    "cmd": [
      "vpython3",
      "-u",
      "RECIPE_MODULE[recipe_engine::file]\\resources\\fileutil.py",
      "--json-output",
      "/path/to/tmp/json",
      "ensure-directory",
      "--mode",
      "0o777",
      "[START_DIR]\\firebase"
    ],
    "infra_step": true,
    "name": "ensure directory"
  },
  {
    "cmd": [],
    "name": "Install firebase"
  },
  {
    "cmd": [
      "curl",
      "-Lo",
      "[START_DIR]\\firebase\\firebase",
      "https://github.com/firebase/firebase-tools/releases/download/v12.9.1/firebase-tools-linux"
    ],
    "infra_step": true,
    "name": "Install firebase.Install firebase bin",
    "~followup_annotations": [
      "@@@STEP_NEST_LEVEL@1@@@"
    ]
  },
  {
    "cmd": [
      "chmod",
      "755",
      "[START_DIR]\\firebase\\firebase"
    ],
    "infra_step": true,
    "name": "Install firebase.Set execute permission",
    "~followup_annotations": [
      "@@@STEP_NEST_LEVEL@1@@@"
    ]
  },
  {
    "cmd": [],
    "name": "Install cmake"
  },
  {
    "cmd": [
      "cipd.bat",
      "ensure",
      "-root",
      "[CACHE]\\cmake",
      "-ensure-file",
      "infra/3pp/tools/cmake/${platform} build_id:8787856497187628321",
      "-max-threads",
      "0",
      "-json-output",
      "/path/to/tmp/json"
    ],
    "name": "Install cmake.ensure_installed",
    "~followup_annotations": [
      "@@@STEP_NEST_LEVEL@1@@@",
      "@@@STEP_LOG_LINE@json.output@{@@@",
      "@@@STEP_LOG_LINE@json.output@  \"result\": {@@@",
      "@@@STEP_LOG_LINE@json.output@    \"\": [@@@",
      "@@@STEP_LOG_LINE@json.output@      {@@@",
      "@@@STEP_LOG_LINE@json.output@        \"instance_id\": \"resolved-instance_id-of-build_id:8787856\",@@@",
      "@@@STEP_LOG_LINE@json.output@        \"package\": \"infra/3pp/tools/cmake/resolved-platform\"@@@",
      "@@@STEP_LOG_LINE@json.output@      }@@@",
      "@@@STEP_LOG_LINE@json.output@    ]@@@",
      "@@@STEP_LOG_LINE@json.output@  }@@@",
      "@@@STEP_LOG_LINE@json.output@}@@@",
      "@@@STEP_LOG_END@json.output@@@"
    ]
  },
  {
    "cmd": [],
    "name": "Installing Mac codesign CIPD pkg"
  },
  {
    "cmd": [
      "cipd.bat",
      "ensure",
      "-root",
      "[CLEANUP]\\tmp_tmp_3",
      "-ensure-file",
      "flutter/codesign/${platform} latest",
      "-max-threads",
      "0",
      "-json-output",
      "/path/to/tmp/json"
    ],
    "name": "Installing Mac codesign CIPD pkg.ensure_installed",
    "~followup_annotations": [
      "@@@STEP_NEST_LEVEL@1@@@",
      "@@@STEP_LOG_LINE@json.output@{@@@",
      "@@@STEP_LOG_LINE@json.output@  \"result\": {@@@",
      "@@@STEP_LOG_LINE@json.output@    \"\": [@@@",
      "@@@STEP_LOG_LINE@json.output@      {@@@",
      "@@@STEP_LOG_LINE@json.output@        \"instance_id\": \"resolved-instance_id-of-latest----------\",@@@",
      "@@@STEP_LOG_LINE@json.output@        \"package\": \"flutter/codesign/resolved-platform\"@@@",
      "@@@STEP_LOG_LINE@json.output@      }@@@",
      "@@@STEP_LOG_LINE@json.output@    ]@@@",
      "@@@STEP_LOG_LINE@json.output@  }@@@",
      "@@@STEP_LOG_LINE@json.output@}@@@",
      "@@@STEP_LOG_END@json.output@@@"
    ]
  },
  {
    "cmd": [],
    "name": "Install cosign"
  },
  {
    "cmd": [
      "cipd.bat",
      "ensure",
      "-root",
      "[CACHE]\\cosign",
      "-ensure-file",
      "flutter/tools/cosign/${platform} latest",
      "-max-threads",
      "0",
      "-json-output",
      "/path/to/tmp/json"
    ],
    "name": "Install cosign.ensure_installed",
    "~followup_annotations": [
      "@@@STEP_NEST_LEVEL@1@@@",
      "@@@STEP_LOG_LINE@json.output@{@@@",
      "@@@STEP_LOG_LINE@json.output@  \"result\": {@@@",
      "@@@STEP_LOG_LINE@json.output@    \"\": [@@@",
      "@@@STEP_LOG_LINE@json.output@      {@@@",
      "@@@STEP_LOG_LINE@json.output@        \"instance_id\": \"resolved-instance_id-of-latest----------\",@@@",
      "@@@STEP_LOG_LINE@json.output@        \"package\": \"flutter/tools/cosign/resolved-platform\"@@@",
      "@@@STEP_LOG_LINE@json.output@      }@@@",
      "@@@STEP_LOG_LINE@json.output@    ]@@@",
      "@@@STEP_LOG_LINE@json.output@  }@@@",
      "@@@STEP_LOG_LINE@json.output@}@@@",
      "@@@STEP_LOG_END@json.output@@@"
    ]
  },
  {
    "cmd": [],
    "name": "Install ninja"
  },
  {
    "cmd": [
      "cipd.bat",
      "ensure",
      "-root",
      "[CACHE]\\ninja",
      "-ensure-file",
      "infra/ninja/${platform} version:1.9.0",
      "-max-threads",
      "0",
      "-json-output",
      "/path/to/tmp/json"
    ],
    "name": "Install ninja.ensure_installed",
    "~followup_annotations": [
      "@@@STEP_NEST_LEVEL@1@@@",
      "@@@STEP_LOG_LINE@json.output@{@@@",
      "@@@STEP_LOG_LINE@json.output@  \"result\": {@@@",
      "@@@STEP_LOG_LINE@json.output@    \"\": [@@@",
      "@@@STEP_LOG_LINE@json.output@      {@@@",
      "@@@STEP_LOG_LINE@json.output@        \"instance_id\": \"resolved-instance_id-of-version:1.9.0---\",@@@",
      "@@@STEP_LOG_LINE@json.output@        \"package\": \"infra/ninja/resolved-platform\"@@@",
      "@@@STEP_LOG_LINE@json.output@      }@@@",
      "@@@STEP_LOG_LINE@json.output@    ]@@@",
      "@@@STEP_LOG_LINE@json.output@  }@@@",
      "@@@STEP_LOG_LINE@json.output@}@@@",
      "@@@STEP_LOG_END@json.output@@@"
    ]
  },
  {
    "cmd": [],
    "name": "Install clang"
  },
  {
    "cmd": [
      "cipd.bat",
      "ensure",
      "-root",
      "[CACHE]\\clang",
      "-ensure-file",
      "fuchsia/third_party/clang/${platform} git_revision:7e9747b50bcb1be28d4a3236571e8050835497a6",
      "-max-threads",
      "0",
      "-json-output",
      "/path/to/tmp/json"
    ],
    "name": "Install clang.ensure_installed",
    "~followup_annotations": [
      "@@@STEP_NEST_LEVEL@1@@@",
      "@@@STEP_LOG_LINE@json.output@{@@@",
      "@@@STEP_LOG_LINE@json.output@  \"result\": {@@@",
      "@@@STEP_LOG_LINE@json.output@    \"\": [@@@",
      "@@@STEP_LOG_LINE@json.output@      {@@@",
      "@@@STEP_LOG_LINE@json.output@        \"instance_id\": \"resolved-instance_id-of-git_revision:7e9\",@@@",
      "@@@STEP_LOG_LINE@json.output@        \"package\": \"fuchsia/third_party/clang/resolved-platform\"@@@",
      "@@@STEP_LOG_LINE@json.output@      }@@@",
      "@@@STEP_LOG_LINE@json.output@    ]@@@",
      "@@@STEP_LOG_LINE@json.output@  }@@@",
      "@@@STEP_LOG_LINE@json.output@}@@@",
      "@@@STEP_LOG_END@json.output@@@"
    ]
  },
  {
    "cmd": [],
    "name": "Prepare code signing"
  },
  {
    "cmd": [],
    "name": "Prepare code signing.Installing Mac mobileprovision",
    "~followup_annotations": [
      "@@@STEP_NEST_LEVEL@1@@@"
    ]
  },
  {
    "cmd": [
      "cipd.bat",
      "ensure",
      "-root",
      "[CLEANUP]\\tmp_tmp_4\\mobileprovision",
      "-ensure-file",
      "flutter_internal/mac/mobileprovision/${platform} latest",
      "-max-threads",
      "0",
      "-json-output",
      "/path/to/tmp/json"
    ],
    "name": "Prepare code signing.Installing Mac mobileprovision.ensure_installed",
    "~followup_annotations": [
      "@@@STEP_NEST_LEVEL@2@@@",
      "@@@STEP_LOG_LINE@json.output@{@@@",
      "@@@STEP_LOG_LINE@json.output@  \"result\": {@@@",
      "@@@STEP_LOG_LINE@json.output@    \"\": [@@@",
      "@@@STEP_LOG_LINE@json.output@      {@@@",
      "@@@STEP_LOG_LINE@json.output@        \"instance_id\": \"resolved-instance_id-of-latest----------\",@@@",
      "@@@STEP_LOG_LINE@json.output@        \"package\": \"flutter_internal/mac/mobileprovision/resolved-platform\"@@@",
      "@@@STEP_LOG_LINE@json.output@      }@@@",
      "@@@STEP_LOG_LINE@json.output@    ]@@@",
      "@@@STEP_LOG_LINE@json.output@  }@@@",
      "@@@STEP_LOG_LINE@json.output@}@@@",
      "@@@STEP_LOG_END@json.output@@@"
    ]
  },
  {
    "cmd": [
      "chmod",
      "755",
      "RECIPE_MODULE[flutter::flutter_deps]\\resources\\copy_mobileprovisioning_profile.sh"
    ],
    "name": "Prepare code signing.Set execute permission",
    "~followup_annotations": [
      "@@@STEP_NEST_LEVEL@1@@@"
    ]
  },
  {
    "cmd": [
      "RECIPE_MODULE[flutter::flutter_deps]\\resources\\copy_mobileprovisioning_profile.sh",
      "[CLEANUP]\\tmp_tmp_4\\mobileprovision\\development.mobileprovision"
    ],
    "name": "Prepare code signing.copy mobileprovisioning profile",
    "~followup_annotations": [
      "@@@STEP_NEST_LEVEL@1@@@"
    ]
  },
  {
    "cmd": [
      "cipd.bat",
      "ensure",
      "-root",
      "[CLEANUP]\\tmp_tmp_5\\curl",
      "-ensure-file",
      "flutter_internal/tools/curl/${platform} latest",
      "-max-threads",
      "0",
      "-json-output",
      "/path/to/tmp/json"
    ],
    "name": "ensure_installed (5)",
    "~followup_annotations": [
      "@@@STEP_LOG_LINE@json.output@{@@@",
      "@@@STEP_LOG_LINE@json.output@  \"result\": {@@@",
      "@@@STEP_LOG_LINE@json.output@    \"\": [@@@",
      "@@@STEP_LOG_LINE@json.output@      {@@@",
      "@@@STEP_LOG_LINE@json.output@        \"instance_id\": \"resolved-instance_id-of-latest----------\",@@@",
      "@@@STEP_LOG_LINE@json.output@        \"package\": \"flutter_internal/tools/curl/resolved-platform\"@@@",
      "@@@STEP_LOG_LINE@json.output@      }@@@",
      "@@@STEP_LOG_LINE@json.output@    ]@@@",
      "@@@STEP_LOG_LINE@json.output@  }@@@",
      "@@@STEP_LOG_LINE@json.output@}@@@",
      "@@@STEP_LOG_END@json.output@@@"
    ]
  },
  {
    "cmd": [
      "cipd.bat",
      "ensure",
      "-root",
      "[CLEANUP]\\tmp_tmp_6\\doxygen",
      "-ensure-file",
      "flutter/doxygen/${platform} latest",
      "-max-threads",
      "0",
      "-json-output",
      "/path/to/tmp/json"
    ],
    "name": "ensure_installed (6)",
    "~followup_annotations": [
      "@@@STEP_LOG_LINE@json.output@{@@@",
      "@@@STEP_LOG_LINE@json.output@  \"result\": {@@@",
      "@@@STEP_LOG_LINE@json.output@    \"\": [@@@",
      "@@@STEP_LOG_LINE@json.output@      {@@@",
      "@@@STEP_LOG_LINE@json.output@        \"instance_id\": \"resolved-instance_id-of-latest----------\",@@@",
      "@@@STEP_LOG_LINE@json.output@        \"package\": \"flutter/doxygen/resolved-platform\"@@@",
      "@@@STEP_LOG_LINE@json.output@      }@@@",
      "@@@STEP_LOG_LINE@json.output@    ]@@@",
      "@@@STEP_LOG_LINE@json.output@  }@@@",
      "@@@STEP_LOG_LINE@json.output@}@@@",
      "@@@STEP_LOG_END@json.output@@@"
    ]
  },
  {
    "cmd": [],
    "name": "Install dart sdk"
  },
  {
    "cmd": [
      "cipd.bat",
      "ensure",
      "-root",
      "[CACHE]\\dart_sdk",
      "-ensure-file",
      "dart/dart-sdk/${platform} stable",
      "-max-threads",
      "0",
      "-json-output",
      "/path/to/tmp/json"
    ],
    "name": "Install dart sdk.ensure_installed",
    "~followup_annotations": [
      "@@@STEP_NEST_LEVEL@1@@@",
      "@@@STEP_LOG_LINE@json.output@{@@@",
      "@@@STEP_LOG_LINE@json.output@  \"result\": {@@@",
      "@@@STEP_LOG_LINE@json.output@    \"\": [@@@",
      "@@@STEP_LOG_LINE@json.output@      {@@@",
      "@@@STEP_LOG_LINE@json.output@        \"instance_id\": \"resolved-instance_id-of-stable----------\",@@@",
      "@@@STEP_LOG_LINE@json.output@        \"package\": \"dart/dart-sdk/resolved-platform\"@@@",
      "@@@STEP_LOG_LINE@json.output@      }@@@",
      "@@@STEP_LOG_LINE@json.output@    ]@@@",
      "@@@STEP_LOG_LINE@json.output@  }@@@",
      "@@@STEP_LOG_LINE@json.output@}@@@",
      "@@@STEP_LOG_END@json.output@@@"
    ]
  },
  {
    "cmd": [],
    "name": "Install certs"
  },
  {
    "cmd": [
      "cipd.bat",
      "ensure",
      "-root",
      "[CACHE]\\certs",
      "-ensure-file",
      "flutter_internal/certs latest",
      "-max-threads",
      "0",
      "-json-output",
      "/path/to/tmp/json"
    ],
    "name": "Install certs.ensure_installed",
    "~followup_annotations": [
      "@@@STEP_NEST_LEVEL@1@@@",
      "@@@STEP_LOG_LINE@json.output@{@@@",
      "@@@STEP_LOG_LINE@json.output@  \"result\": {@@@",
      "@@@STEP_LOG_LINE@json.output@    \"\": [@@@",
      "@@@STEP_LOG_LINE@json.output@      {@@@",
      "@@@STEP_LOG_LINE@json.output@        \"instance_id\": \"resolved-instance_id-of-latest----------\",@@@",
      "@@@STEP_LOG_LINE@json.output@        \"package\": \"flutter_internal/certs\"@@@",
      "@@@STEP_LOG_LINE@json.output@      }@@@",
      "@@@STEP_LOG_LINE@json.output@    ]@@@",
      "@@@STEP_LOG_LINE@json.output@  }@@@",
      "@@@STEP_LOG_LINE@json.output@}@@@",
      "@@@STEP_LOG_END@json.output@@@"
    ]
  },
  {
    "cmd": [
      "powershell.exe",
      "[CACHE]\\certs\\install.ps1"
    ],
    "cwd": "[CACHE]\\certs",
    "env": {
      "ANDROID_HOME": "[CACHE]\\android",
      "ANDROID_NDK_PATH": "[CACHE]\\android\\ndk-bundle",
      "ANDROID_SDK_HOME": "[CLEANUP]\\tmp_tmp_2",
      "ANDROID_SDK_ROOT": "[CACHE]\\android",
      "ANDROID_USER_HOME": "[CLEANUP]\\tmp_tmp_2\\.android",
      "CHROME_EXECUTABLE": "[CACHE]\\chrome\\chrome\\chrome.exe",
      "CHROME_NO_SANDBOX": "true",
      "FIREFOX_EXECUTABLE": "[CACHE]\\firefox\\firefox",
      "FLUTTER_XCODE_CODE_SIGN_STYLE": "Manual",
      "FLUTTER_XCODE_DEVELOPMENT_TEAM": "S8QB4VV633",
      "FLUTTER_XCODE_PROVISIONING_PROFILE_SPECIFIER": "match Development *",
      "GOPATH": "[CLEANUP]\\go_path",
      "GRADLE_OPTS": "-Dorg.gradle.daemon=false",
      "GRADLE_USER_HOME": "[CACHE]\\gradle"
    },
    "env_prefixes": {
      "PATH": [
        "[CACHE]\\certs",
        "[CACHE]\\dart_sdk",
        "[CACHE]\\chrome\\chrome",
        "[CACHE]\\chrome\\drivers",
        "[CACHE]\\firefox",
        "[CACHE]\\go\\bin",
        "[CLEANUP]\\go_path\\bin",
        "[CACHE]\\go\\bin",
        "[CLEANUP]\\go_path\\bin",
        "[START_DIR]\\firebase",
        "[CACHE]\\cmake\\bin",
        "[CLEANUP]\\tmp_tmp_3",
        "[CACHE]\\cosign\\bin",
        "[CACHE]\\ninja",
        "[CACHE]\\clang\\bin",
        "[CLEANUP]\\tmp_tmp_5\\curl",
        "[CLEANUP]\\tmp_tmp_6\\doxygen\\bin"
      ]
    },
    "name": "Install Certs"
  },
  {
    "cmd": [],
    "name": "VSBuild"
  },
  {
    "cmd": [
      "None\\Microsoft Visual Studio\\Installer\\vswhere.exe",
      "-legacy",
      "-prerelease",
      "-format",
      "json"
    ],
    "name": "VSBuild.Detect installation",
    "~followup_annotations": [
      "@@@STEP_NEST_LEVEL@1@@@",
      "@@@STEP_LOG_LINE@json.output@[@@@",
      "@@@STEP_LOG_LINE@json.output@  {@@@",
      "@@@STEP_LOG_LINE@json.output@    \"catalog\": {@@@",
      "@@@STEP_LOG_LINE@json.output@      \"productLineVersion\": \"2019\"@@@",
      "@@@STEP_LOG_LINE@json.output@    }@@@",
      "@@@STEP_LOG_LINE@json.output@  }@@@",
      "@@@STEP_LOG_LINE@json.output@]@@@",
      "@@@STEP_LOG_END@json.output@@@"
    ]
  },
  {
    "cmd": [],
    "name": "Install ruby"
  },
  {
    "cmd": [
      "cipd.bat",
      "ensure",
      "-root",
      "[CACHE]\\ruby",
      "-ensure-file",
      "flutter/ruby/${platform} latest",
      "-max-threads",
      "0",
      "-json-output",
      "/path/to/tmp/json"
    ],
    "name": "Install ruby.ensure_installed",
    "~followup_annotations": [
      "@@@STEP_NEST_LEVEL@1@@@",
      "@@@STEP_LOG_LINE@json.output@{@@@",
      "@@@STEP_LOG_LINE@json.output@  \"result\": {@@@",
      "@@@STEP_LOG_LINE@json.output@    \"\": [@@@",
      "@@@STEP_LOG_LINE@json.output@      {@@@",
      "@@@STEP_LOG_LINE@json.output@        \"instance_id\": \"resolved-instance_id-of-latest----------\",@@@",
      "@@@STEP_LOG_LINE@json.output@        \"package\": \"flutter/ruby/resolved-platform\"@@@",
      "@@@STEP_LOG_LINE@json.output@      }@@@",
      "@@@STEP_LOG_LINE@json.output@    ]@@@",
      "@@@STEP_LOG_LINE@json.output@  }@@@",
      "@@@STEP_LOG_LINE@json.output@}@@@",
      "@@@STEP_LOG_END@json.output@@@"
    ]
  },
  {
    "cmd": [],
    "name": "Install ktlint"
  },
  {
    "cmd": [
      "cipd.bat",
      "ensure",
      "-root",
      "[CACHE]\\ktlint",
      "-ensure-file",
      "flutter/ktlint/${platform} latest",
      "-max-threads",
      "0",
      "-json-output",
      "/path/to/tmp/json"
    ],
    "name": "Install ktlint.ensure_installed",
    "~followup_annotations": [
      "@@@STEP_NEST_LEVEL@1@@@",
      "@@@STEP_LOG_LINE@json.output@{@@@",
      "@@@STEP_LOG_LINE@json.output@  \"result\": {@@@",
      "@@@STEP_LOG_LINE@json.output@    \"\": [@@@",
      "@@@STEP_LOG_LINE@json.output@      {@@@",
      "@@@STEP_LOG_LINE@json.output@        \"instance_id\": \"resolved-instance_id-of-latest----------\",@@@",
      "@@@STEP_LOG_LINE@json.output@        \"package\": \"flutter/ktlint/resolved-platform\"@@@",
      "@@@STEP_LOG_LINE@json.output@      }@@@",
      "@@@STEP_LOG_LINE@json.output@    ]@@@",
      "@@@STEP_LOG_LINE@json.output@  }@@@",
      "@@@STEP_LOG_LINE@json.output@}@@@",
      "@@@STEP_LOG_END@json.output@@@"
    ]
  },
  {
    "cmd": [
      "chmod",
      "755",
      "[CACHE]\\ktlint\\ktlint"
    ],
    "infra_step": true,
    "name": "Install ktlint.Set execute permission",
    "~followup_annotations": [
      "@@@STEP_NEST_LEVEL@1@@@"
    ]
  },
  {
    "cmd": [
      "git",
      "rev-parse",
      "HEAD"
    ],
    "cwd": "[START_DIR]\\flutter sdk",
    "infra_step": true,
    "name": "git rev-parse"
  },
  {
    "cmd": [
      "[START_DIR]\\flutter sdk\\bin\\flutter.bat",
      "config",
      "--clear-features"
    ],
    "name": "flutter config --clear-features"
  },
  {
    "name": "$result"
  }
]